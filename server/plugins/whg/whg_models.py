#!/usr/bin/env -S uv run --script

# Source: https://whgazetteer.org/api/datasets
# Docs: https://docs.whgazetteer.org/content/400-Technical.html

# /// script
# requires-python = ">=3.13"
# dependencies = [
#     "httpx",
#     "pydantic",
# ]
# ///
#
# generated by datamodel-codegen:
#   filename:  whg.json
#   timestamp: 2025-04-28T10:31:22+00:00
#
# Generated with command:
# uv tool run --from=datamodel-code-generator datamodel-codegen \
#             --input whg.json --input-file-type json \
#             --output whg_models.py

from __future__ import annotations

from typing import Any

from pydantic import BaseModel


class Feature(BaseModel):
    id: int
    place_count: int
    owner: str
    label: str
    title: str
    description: str
    datatype: str
    ds_status: str
    create_date: str
    public: bool
    core: bool
    creator: str | None
    webpage: str | None
    contributors: str | None


class Model(BaseModel):
    count: int
    parameters: dict[str, Any]
    features: list[Feature]


if __name__ == "__main__":
    import json
    from pathlib import Path

    from httpx import Client

    here = Path(__file__).resolve().parent
    # Conditionally create an whg.json file that should contain whg dataset items.
    if not (json_path := here / "whg.json").exists():
        with Client() as httpx_client:
            response = httpx_client.get("https://whgazetteer.org/api/datasets")
            response.raise_for_status()
            json_path.write_text(response.text)
    # Conditionally create an whg_item.json file that should contain only one item.
    if not (json_item_path := here / "whg_item.json").exists():
        json_payload = json.loads(json_path.read_text())["features"][0]
        json_item_path.write_text(json.dumps(json_payload, indent=2))

    # The whg_item.json file should be in the same directory as this script.
    model_instance = Model.model_validate_json(json_path.read_text())
    print(f"{model_instance = }\n")
    print(f"{model_instance.count = }")
    print(f"{model_instance.parameters = }\n")

    # The whg_item.json file should be in the same directory as this script.
    feature_instance = Feature.model_validate_json(json_item_path.read_text())
    print(f"{feature_instance = }\n")
    print(f"{feature_instance.title = }")
    print(f"{feature_instance.creator = }")
    print(f"{feature_instance.description = }")
    print(f"{feature_instance.contributors = }")
