{
  "response":{"numFound":336,"start":0,"numFoundExact":true,"docs":[
      {
        "id":"EJ1166550",
        "title":"On Parallel Software Engineering Education Using Python",
        "author":["Marowka, Ami"],
        "description":"Python is gaining popularity in academia as the preferred language to teach novices serial programming. The syntax of Python is clean, easy, and simple to understand. At the same time, it is a high-level programming language that supports multi programming paradigms such as imperative, functional, and object-oriented. Therefore, by default, it is almost obvious to believe that Python is also the appropriate language for teaching parallel programming paradigms. This paper presents an in-depth study that examines to what extent Python language is suitable for teaching parallel programming to inexperienced students. The findings show that Python has stumbling blocks that prevent it from preserving its advantages when shifting from serial programming to parallel programming. Therefore, choosing Python as the first language for teaching parallel programming calls for strong justifications, especially when better solutions exist in the community.",
        "subject":["Computer Science Education",
          "Programming Languages",
          "Computer Software",
          "Engineering Education",
          "Novices",
          "Educational Benefits",
          "Barriers"],
        "publicationtype":["Journal Articles",
          "Reports - Research"],
        "publicationdateyear":2018,
        "language":["English"],
        "issn":["ISSN-1360-2357"],
        "publisher":"Springer. 233 Spring Street, New York, NY 10013. Tel: 800-777-4643; Tel: 212-460-1500; Fax: 212-348-4505; e-mail: service-ny@springer.com; Web site: http://www.springerlink.com",
        "peerreviewed":"T"},
      {
        "id":"EJ1252358",
        "title":"A Controlled Experiment on Python vs C for an Introductory Programming Course: Students&apos; Outcomes",
        "author":["Wainer, Jacques",
          "Xavier, Eduardo C."],
        "description":"We performed a controlled experiment comparing a C and a Python Introductory Programming course. Three faculty members at University of Campinas, Brazil, taught the same CS1 course for the same majors in two different semesters, one version in Python and one in C, with a total of 391 students involved in the experiment. We measured the dropout rate, the failure rate, the grades on the two exams, the proportion of completed lab assignments, and the number of submissions per completed assignment. There was no difference in the dropout rate. The failure rate for Python was 16.9% against 23.1% for C. The effect size (Cohen's D) on the comparison of Python against C on the midterm exam was 0.27, and 0.38 for the final exam. The effect size for the proportion of completed assignments was 0.39 and the effect size for the number of submissions per assignment was -0.61 (Python had less submissions per completed assignments). Thus, for all measures, with the exception of dropout rate, the version of the course in Python yielded better student outcomes than the version in C and all differences are significant (with 95% confidence) with the exception of the failure rate (p-value = 0.12).",
        "subject":["Foreign Countries",
          "Computer Science Education",
          "Introductory Courses",
          "Programming",
          "Dropout Rate",
          "Academic Failure",
          "Grades (Scholastic)",
          "Assignments",
          "College Students",
          "Outcomes of Education"],
        "publicationtype":["Journal Articles",
          "Reports - Research"],
        "publicationdateyear":2018,
        "language":["English"],
        "issn":["EISSN-1946-6226"],
        "publisher":"Association for Computing Machinery. 2 Penn Plaza Suite 701, New York, NY 10121. Tel: 800-342-6626; Tel: 212-626-0500; Fax: 212-944-1318; e-mail: acmhelp@acm.org; Web site: http://toce.acm.org/",
        "peerreviewed":"T"},
      {
        "id":"EJ1201047",
        "title":"Using Python as a Toolbox for Student-Directed Virtual Labs",
        "author":["Lincoln, James"],
        "description":"Python is a free, text-based programming language that has already been used by those who do physics research to great effect. But students can also learn to use it and, through its use, learn other aspects of physics--especially ones that are difficult or impossible to perform as physical labs. This article serves as a most-fundamental start for teachers who are interested in how they can use Python to enhance their physics instruction. Although there have been a few articles that have made references to using Python, none so far in this journal has described how quickly and effectively it can be used to simulate a virtual lab experience or aid in creative design. In this first of two articles, I introduce Python (and VPython) and provide some sample codes to guide beginners.",
        "subject":["Science Instruction",
          "Physics",
          "Computer Uses in Education",
          "Programming Languages",
          "Computer Simulation",
          "Science Laboratories",
          "Design",
          "Programming"],
        "publicationtype":["Journal Articles",
          "Reports - Descriptive"],
        "publicationdateyear":2019,
        "language":["English"],
        "issn":["ISSN-0031-921X"],
        "publisher":"American Association of Physics Teachers. One Physics Ellipse, College Park, MD 20740. Tel: 301-209-3300; Fax: 301-209-0845; e-mail: pubs@aapt.org; Web site: http://aapt.scitation.org/journal/pte",
        "peerreviewed":"T"},
      {
        "id":"EJ1349383",
        "title":"Visualizing Protein Big Data Using Python and Jupyter Notebooks",
        "author":["Weiss, Charles J."],
        "description":"This article reports a workshop from the 2021 IUBMB/ASBMB Teaching Science with Big Data conference held virtually in June 2021 where participants learned to explore and visualize large quantities of protein PBD data using Jupyter notebooks and the Python programming language. This activity instructs participants using Jupyter notebooks, Python functions, loading data with Python, and visualize data using the matplotlib and seaborn Python plotting libraries. It also allows participants to explore large quantities of data to discover trends such amino acid abundance, dihedral angles patterns, and secondary protein structure trends. All files used in this activity, including data files, Jupyter notebooks, and completed Jupyter notebooks, are freely available at https://github.com/weisscharlesj/BiopythonRamachandran under the CC BY-NC-SA 4.0 Creative Commons license.",
        "subject":["Visual Aids",
          "Programming Languages",
          "Data Analysis",
          "Science Instruction",
          "Teaching Methods",
          "Biochemistry",
          "Workshops",
          "Conferences (Gatherings)",
          "Computer Software",
          "Molecular Structure",
          "Trend Analysis"],
        "publicationtype":["Journal Articles",
          "Reports - Descriptive"],
        "publicationdateyear":2022,
        "language":["English"],
        "issn":["ISSN-1470-8175"],
        "publisher":"Wiley. Available from: John Wiley & Sons, Inc. 111 River Street, Hoboken, NJ 07030. Tel: 800-835-6770; e-mail: cs-journals@wiley.com; Web site: https://www.wiley.com/en-us",
        "peerreviewed":"T"},
      {
        "id":"EJ1383841",
        "title":"Teaching Case: Using Python and AWS for NoSQL in a BI Course.",
        "author":["Mitri, Michel"],
        "description":"This article presents a multi-stage guided technical project coding Python scripts for utilizing Amazon Web Services (AWS) to work with a document-store database called DynamoDB. Students doing this project should have taken an introductory programming class (ideally in Python) and a database class to have experience with Python coding and database manipulation/querying in a relational environment. Students learn new data formats (Python dictionaries, JSON text data, key-value storage structures) and learn how to transform data from one format to another. They also gain experience with data visualization. The project was first carried out in a business intelligence (BI) course during Spring 2020 semester in the midst of COVID and included video tutorials. Since then, it has been refined and used each semester the BI course is taught.",
        "subject":["Programming Languages",
          "Computer Science Education",
          "Student Projects",
          "Databases",
          "Undergraduate Students",
          "COVID-19",
          "Pandemics",
          "Distance Education"],
        "publicationtype":["Journal Articles",
          "Reports - Descriptive"],
        "publicationdateyear":2023,
        "language":["English"],
        "issn":["ISSN-1055-3096"],
        "publisher":"Journal of Information Systems Education. e-mail: editor@jise.org; Web site: http://www.jise.org",
        "peerreviewed":"T"},
      {
        "id":"EJ1277309",
        "title":"Series of Jupyter Notebooks Using Python for an Analytical Chemistry Course",
        "author":["Menke, Erik J."],
        "description":"UC Merced's upper-division analytical chemistry course has been modified to include a series of Jupyter notebooks intended to introduce chemistry students to the Python computer language. These Jupyter notebooks were designed to cover a wide variety of topics common to quantitative and instrumental analysis. Assuming no prior programming experience, the notebooks are scaffolded to introduce students the Python's syntax while applying Python to solving chemical problems. Jupyter and Python were chosen because they are free, widely available, and widely used.",
        "subject":["Science Instruction",
          "Chemistry",
          "College Science",
          "Undergraduate Study",
          "Computer Assisted Instruction",
          "Electronic Learning",
          "Programming Languages",
          "Teaching Methods",
          "Open Source Technology",
          "Student Journals",
          "Scientific Concepts"],
        "publicationtype":["Journal Articles",
          "Reports - Research"],
        "publicationdateyear":2020,
        "language":["English"],
        "issn":["ISSN-0021-9584"],
        "publisher":"Division of Chemical Education, Inc. and ACS Publications Division of the American Chemical Society. 1155 Sixteenth Street NW, Washington, DC 20036. Tel: 800-227-5558; Tel: 202-872-4600; e-mail: eic@jce.acs.org; Web site: http://pubs.acs.org/jchemeduc",
        "peerreviewed":"T"},
      {
        "id":"EJ807663",
        "title":"Python and Roles of Variables in Introductory Programming: Experiences from Three Educational Institutions",
        "author":["Nikula, Uolevi",
          "Sajaniemi, Jorma",
          "Tedre, Matti",
          "Wray, Stuart"],
        "description":"Students often find that learning to program is hard. Introductory programming courses have high drop-out rates and students do not learn to program well. This paper presents experiences from three educational institutions where introductory programming courses were improved by adopting Python as the first programming language and roles of variables as an aid in understanding program behavior. As a result of these changes, students were able to write working code from the very beginning, they found programming easy and interesting, they passed exams with good grades, and drop-out rates were low. Students became interested in programming and some of them even changed their personal study plan to include more of programming and computer science. The high abstraction level and complexity of the concepts to be learned in current elementary programming courses is a serious impediment to students. Python is a simple but powerful programming language that supports both procedural and object-oriented programming. It makes short programs straightforward to write while at the same time facilitating rapid development of powerful applications. Python has been found to make programming more fun and thus attract students. Some of the common arguments against Python include concerns about using an interpreted language, the different syntax from C++ and Java, the use of whitespace to represent code blocks, and the lack of static type checking. However, these concerns have not caused any significant problems in practice, though it may take some effort to adapt to the syntax of other languages. Roles of variables are stereotyped patterns of usage of a variable. For example, in the role of a &quot;stepper&quot;, a variable is assigned a succession of values that is predictable and usually known in advance as soon as the succession starts. Roles provide students with programming knowledge in a compact form, which they can then apply in authoring and understanding programs independently of the programming language used. In a classroom experiment, explicit teaching of roles has been found to result in better programming skills. This paper also discusses the applicability of the roles to Python and notes some changes in the interpretation of individual roles required by some peculiarities of Python. In general, roles apply to Python well. However, the lack of constants in Python calls for a new role, and the use of lists in for-loops suggests a new interpretation for the stepper role. Finally, the difference between the two data structure roles, organizer and container, is smaller in Python than in other languages making their separation needless. (Contains 3 tables.)",
        "subject":["Programming Languages",
          "Programming",
          "Abstract Reasoning",
          "Introductory Courses",
          "Computer Science Education",
          "Foreign Countries",
          "Information Technology",
          "Undergraduate Study",
          "Higher Education",
          "Dropout Rate"],
        "publicationtype":["Journal Articles",
          "Reports - Evaluative"],
        "publicationdateyear":2007,
        "language":["English"],
        "issn":["ISSN-1547-9714"],
        "publisher":"Informing Science Institute. 131 Brookhill Court, Santa Rosa, CA 95409. Tel: 707-537-2211; Fax: 480-247-5724; Web site: http://JITE.org",
        "peerreviewed":"T"},
      {
        "id":"EJ1143599",
        "title":"Scraping EDGAR with Python",
        "author":["Ashraf, Rasha"],
        "description":"This article presents Python codes that can be used to extract data from Securities and Exchange Commission (SEC) filings. The Python program web crawls to obtain URL paths for company filings of required reports, such as Form 10-K. The program then performs a textual analysis and counts the number of occurrences of words in the filing that reflect, for example, uncertainty (or any other quality specified by the researcher). The program can be easily modified to conduct other searches by changing the word list, company names, or SEC filings. The Python program could be used in an introductory graduate data analytics course in finance that has a web crawling or textual analysis component.",
        "subject":["Information Retrieval",
          "Search Engines",
          "Search Strategies",
          "Online Searching",
          "Electronic Libraries",
          "Business Administration Education",
          "Graduate Study",
          "Data Analysis",
          "Data Processing",
          "Educational Technology",
          "Technology Uses in Education"],
        "publicationtype":["Journal Articles",
          "Reports - Descriptive"],
        "publicationdateyear":2017,
        "language":["English"],
        "issn":["ISSN-0883-2323"],
        "publisher":"Routledge. Available from: Taylor & Francis, Ltd. 530 Walnut Street Suite 850, Philadelphia, PA 19106. Tel: 800-354-1420; Tel: 215-625-8900; Fax: 215-207-0050; Web site: http://www.tandf.co.uk/journals",
        "peerreviewed":"T"},
      {
        "id":"EJ1352186",
        "title":"Easy-to-Use Cloud Computing for Teaching Data Science",
        "author":["Kim, Brian",
          "Henke, Graham"],
        "description":"One of the biggest hurdles of teaching data science and programming techniques to beginners is simply getting started with the technology. With multiple versions of the same coding language available (e.g., Python 2 and Python 3), various additional libraries and packages to install, as well as integrated development environments to navigate, the first step can be the most daunting. We show the advantages of using cloud computing to solve this issue and demonstrate one way of implementing it to allow beginners to get started with coding immediately. Using user-friendly Jupyter notebooks along with the interactive capabilities possible through Binder, we provide introductory Python and SQL material that students can access without downloading anything. This lets students to get started with coding right away without getting frustrated figuring out what to install. Example introductory modules on using Python and SQL for data analysis are provided through GitHub at https://github.com/Coleridge-Initiative/ada-intro-python and https://github.com/Coleridge-Initiative/ada-intro-sql.",
        "subject":["Computer Software",
          "Data Analysis",
          "Programming Languages",
          "Computer Science Education",
          "Student Motivation",
          "Teaching Methods",
          "Technology Uses in Education"],
        "publicationtype":["Journal Articles",
          "Reports - Descriptive"],
        "publicationdateyear":2021,
        "language":["English"],
        "publisher":"Taylor & Francis. Available from: Taylor & Francis, Ltd. 530 Walnut Street Suite 850, Philadelphia, PA 19106. Tel: 800-354-1420; Tel: 215-625-8900; Fax: 215-207-0050; Web site: http://www.tandf.co.uk/journals",
        "peerreviewed":"T"},
      {
        "id":"EJ1219540",
        "title":"Easy as Py: A First Course in Python with a Taste of Data Analytics",
        "author":["Frydenberg, Mark",
          "Xu, Jennifer"],
        "description":"Python is a popular, general purpose programming language that is gaining wide adoption in beginning programming courses. This paper describes the development and implementation of an introductory Python course at a business university open to students in a variety of majors and minors. Given the growing number of career opportunities in analytics, the instructors felt that including a module on Data Analytics would add relevance and interest in the course. A survey given at the end of the semester shows students found this topic to be relevant to their future uses of Python. The paper also discusses challenges in teaching a first programming course to students with varying levels of programming experience.",
        "subject":["Programming Languages",
          "Introductory Courses",
          "Data Analysis",
          "Course Descriptions",
          "Business Schools",
          "Student Attitudes",
          "Relevance (Education)",
          "Employment Opportunities",
          "Student Interests",
          "Undergraduate Students",
          "Computer Science Education"],
        "publicationtype":["Journal Articles",
          "Reports - Research"],
        "publicationdateyear":2019,
        "language":["English"],
        "issn":["EISSN-1545-679X"],
        "publisher":"Information Systems and Computing Academic Professionals. Box 488, Wrightsville Beach, NC 28480. e-mail: publisher@isedj.org; Web site: http://isedj.org",
        "peerreviewed":"T"},
      {
        "id":"EJ1310052",
        "title":"Python Programming in an IS Curriculum: Perceived Relevance and Outcomes",
        "author":["Xu, Jennifer",
          "Frydenberg, Mark"],
        "description":"Recent years have witnessed a growing demand for business analytics-oriented curricula. This paper presents the implementation of an introductory Python course at a business university and the attempt to elevate the course's relevance by introducing data analytics topics. The results from a survey of 64 undergraduate students of the course are analyzed to understand their perceived relevance of having Python programming skills upon entering the workplace, and how course design and other student characteristics influenced the perceptions of their learning and performance. Results demonstrate that business students are highly motivated to take Python programming courses to better position themselves for future career opportunities in the growing field of data analytics. We also found that students with no prior programming experience performed better than students who had some prior programming experience, suggesting that Python is an appropriate choice for a first programming language in the Information Systems (IS) curriculum. The paper concludes with recommendations for offering an analytics-focused first programming course to bring added relevance to IS students learning programming skills.",
        "subject":["Programming Languages",
          "Computer Science Education",
          "Information Systems",
          "Relevance (Education)",
          "Education Work Relationship",
          "Introductory Courses",
          "Business Administration Education",
          "Undergraduate Students",
          "Student Attitudes",
          "Student Characteristics",
          "Student Motivation",
          "Prior Learning",
          "Data Analysis",
          "Performance Factors",
          "Job Skills"],
        "publicationtype":["Journal Articles",
          "Reports - Research"],
        "publicationdateyear":2021,
        "language":["English"],
        "issn":["EISSN-1545-679X"],
        "publisher":"Information Systems and Computing Academic Professionals. Box 488, Wrightsville Beach, NC 28480. e-mail: publisher@isedj.org; Web site: http://isedj.org",
        "peerreviewed":"T"},
      {
        "id":"EJ1411256",
        "title":"Upgrading Financial Education by Adding Python-Based Personalized Financial Projection: A Randomized Control Trial",
        "author":["Alex Yue Feng Zhu"],
        "description":"Research has shown that even though standardized financial education has gained prevalence to promote financial literacy over the past decade, it has had little effect on personal financial planning. The present study used a randomized control trial to examine the effectiveness of a Python-based personalized financial projection on young working adults in Hong Kong, to examine if and how this approach improves their financial planning. Participants assigned to the experiment group received standardized financial education and Python-based financial projections, while those in the control group only received standardized financial education. The assessment based on the two-wave data showed that Python-based financial projection promoted future time perspectives, reduced temporal discounting, and improved financial planning via the full mediation of promoting financial attitudes. Although numerous applications for personal financial planning exist (such as Wallet, Walnut, Monefy, and Money View), our Python-based financial projection stands out as the pioneering solution tailored for the hands-on manipulation of programming code to effectively manage personal finances. Our findings suggest a new track to upgrade personalized financial projection and standardized financial education and contribute generously to the development of personal finance education.",
        "subject":["Financial Education",
          "Programming Languages",
          "Financial Literacy",
          "Money Management",
          "Young Adults",
          "Foreign Countries",
          "Time Perspective"],
        "publicationtype":["Journal Articles",
          "Reports - Research"],
        "publicationdateyear":2024,
        "language":["English"],
        "issn":["ISSN-0007-1013"],
        "publisher":"Wiley. Available from: John Wiley & Sons, Inc. 111 River Street, Hoboken, NJ 07030. Tel: 800-835-6770; e-mail: cs-journals@wiley.com; Web site: https://www.wiley.com/en-us",
        "peerreviewed":"T"},
      {
        "id":"EJ1258967",
        "title":"PyDiophantus Maze Game: Play It to Learn Mathematics or Implement It to Learn Game Programming in Python",
        "author":["Koupritzioti, Dimitra",
          "Xinogalos, Stelios"],
        "description":"Serious games or educational games have attracted the interest of instructors and researchers for several years. In the field of education, serious games are being used for motivating students, attracting their interest in cognitively demanding fields and making the teaching and learning process more fun. Moreover, learning through implementing games has been proposed as an effective alternative to the traditional instructor-centered approach to teaching programming. Towards this direction the study presented in this article aims to investigate whether it is feasible to learn programming concepts, as well as game programming concepts, through implementing a game in Python. More specifically, the study presented has the following goals: firstly, to review and comparatively analyze existing game engines and libraries that can be used by novice programmers for implementing simple games in Python; secondly, to investigate whether it is feasible to implement a simple but yet meaningful game that can be used as a prototype for learning programming concepts and game programming concepts in Python. In order to reach the second goal a serious game was implemented as a case study, using the free and open source Python library of pygame that based on the aforementioned comparative analysis is appropriate for novices. The PyDiophantus Maze game that was implemented can be used for teaching and learning game programming in Python, but also for learning mathematics. The article concludes with proposals for utilizing the game in mathematics and (game) programming education, as well as plans for further research.",
        "subject":["Educational Games",
          "Mathematics Activities",
          "Mathematics Education",
          "Programming",
          "Programming Languages",
          "Novices",
          "Teaching Methods",
          "Computer Science Education"],
        "publicationtype":["Journal Articles",
          "Reports - Research"],
        "publicationdateyear":2020,
        "language":["English"],
        "issn":["ISSN-1360-2357"],
        "publisher":"Springer. Available from: Springer Nature. 233 Spring Street, New York, NY 10013. Tel: 800-777-4643; Tel: 212-460-1500; Fax: 212-348-4505; e-mail: customerservice@springernature.com; Web site: https://link.springer.com/",
        "peerreviewed":"T"},
      {
        "id":"EJ1221406",
        "title":"Creating Dynamic Documents with R and Python as a Computational and Visualization Tool for Teaching Differential Equations",
        "author":["Kostadinov, Boyan",
          "Thiel, Johann",
          "Singh, Satyanand"],
        "description":"The goal of this paper is to promote the use of R and Python as high-level, free, open-source programming environments that can be used as a computational and visualization tool for teaching differential equations. Both R and Python also allow for creating reproducible dynamic documents using Markdown, which combines live code, plain text, and expressions to generate different formats (pdf, html, Word), including the numerical and graphical output from the code, along with the code itself, properly formatted with minimum effort. This technology can be used for creating interactive teaching documents, randomized exams, homework and project reports, and even publication quality papers. We illustrate this technology with several examples implemented in R and Python. This approach has been classroom-tested, with some promising results. This article has online supplemental material posted on the &quot;PRIMUS&quot; website.",
        "subject":["Mathematics Instruction",
          "College Mathematics",
          "Undergraduate Study",
          "Programming",
          "Computation",
          "Visualization",
          "Equations (Mathematics)",
          "Educational Technology",
          "Technology Uses in Education"],
        "publicationtype":["Journal Articles",
          "Reports - Descriptive"],
        "publicationdateyear":2019,
        "language":["English"],
        "issn":["ISSN-1051-1970"],
        "publisher":"Taylor & Francis. Available from: Taylor & Francis, Ltd. 530 Walnut Street Suite 850, Philadelphia, PA 19106. Tel: 800-354-1420; Tel: 215-625-8900; Fax: 215-207-0050; Web site: http://www.tandf.co.uk/journals",
        "peerreviewed":"T"},
      {
        "id":"EJ1445344",
        "title":"Interactive Python Notebook Modules for Chemoinformatics in Medicinal Chemistry",
        "author":["Babak Mahjour",
          "Andrew McGrath",
          "Andrew Outlaw",
          "Ruheng Zhao",
          "Charles Zhang",
          "Tim Cernak"],
        "description":"Data science is becoming a mainstay in research. Despite this, very few STEM graduates matriculate with basic formal training in programming. The current lesson plan was developed to introduce undergraduates studying chemistry or biology to chemoinformatics and data science in medicinal chemistry. The objective of this lesson plan is to introduce students to common techniques used in analyzing medicinal chemistry data sets, such as visualizing chemical space, filtering to molecules that observe the Lipinski rules of drug-likeness, and principal component analysis. The content provided in this lesson plan is intended to serve as a tutorial-based reference for aspiring researchers. The lesson plan is split into two three-hour class sessions, each with an introductory slide deck, Python notebook consisting of several modules, and lab report template. During this activity, students learned to parse medicinal chemistry data sets with Python, perform simple machine learning analyses, and develop interactive graphs. During each session, students complete the Python notebook protocol and fill out a lab report template after a short lecture. By the end of the lesson plan, students were able to generate and manipulate various plots of chemical space and they reported having increased confidence in their understanding of chemistry, Python, and data science.",
        "subject":["Undergraduate Students",
          "Chemistry",
          "Biology",
          "Information Science",
          "Medicine",
          "Programming",
          "Technology Uses in Education",
          "Artificial Intelligence"],
        "publicationtype":["Journal Articles",
          "Reports - Descriptive"],
        "publicationdateyear":2023,
        "language":["English"],
        "issn":["ISSN-0021-9584"],
        "publisher":"Division of Chemical Education, Inc. and ACS Publications Division of the American Chemical Society. 1155 Sixteenth Street NW, Washington, DC 20036. Tel: 800-227-5558; Tel: 202-872-4600; e-mail: eic@jce.acs.org; Web site: http://pubs.acs.org/jchemeduc",
        "peerreviewed":"T"},
      {
        "id":"EJ1140879",
        "title":"Java vs. Python Coverage of Introductory Programming Concepts: A Textbook Analysis",
        "author":["McMaster, Kirby",
          "Sambasivam, Samuel",
          "Rague, Brian",
          "Wolthuis, Stuart"],
        "description":"In this research, we compare two languages, Java and Python, by performing a content analysis of words in textbooks that describe important programming concepts. Our goal is to determine which language has better textbook support for teaching introductory programming courses. We used the TextSTAT program to count how often our list of concept words appear in a sample of Java and Python textbooks. We summarize and compare the results, leading to several conclusions that relate to the choice of language for a CS0 or CS1 course.",
        "subject":["Introductory Courses",
          "Programming",
          "Content Analysis",
          "Textbooks",
          "Textbook Content",
          "Teaching Methods",
          "Concept Formation",
          "Word Frequency",
          "Correlation",
          "Computer Software"],
        "publicationtype":["Journal Articles",
          "Reports - Research"],
        "publicationdateyear":2017,
        "language":["English"],
        "issn":["EISSN-1545-679X"],
        "publisher":"Information Systems and Computing Academic Professionals. Box 488, Wrightsville Beach, NC 28480. e-mail: publisher@isedj.org; Web site: http://isedj.org",
        "peerreviewed":"T"},
      {
        "id":"EJ1308965",
        "title":"A Gentle Introduction to Machine Learning for Chemists: An Undergraduate Workshop Using Python Notebooks for Visualization, Data Processing, Analysis, and Modeling",
        "author":["Lafuente, Deborah",
          "Cohen, Brenda",
          "Fiorini, Guillermo",
          "Garci´a, Agusti´n Alejo",
          "Bringas, Mauro",
          "Morzan, Ezequiel",
          "Onna, Diego"],
        "description":"Machine learning, a subdomain of artificial intelligence, is a widespread technology that is molding how chemists interact with data. Therefore, it is a relevant skill to incorporate into the toolbox of any chemistry student. This work presents a workshop that introduces machine learning for chemistry students based on a set of Python notebooks and assignments. Python, one of the most popular programming languages, is open source, free to use, and has plenty of learning resources. The workshop is designed for students without previous experience in programming, and it aims for a deeper understanding of the complexity of concepts in programming and machine learning. The examples used correspond to real data from physicochemical characterizations of wine, a content that is of interest for students. The contents of the workshop are introduction to Python, basic statistics, data visualization, and dimension reduction, classification, and regression.",
        "subject":["Undergraduate Students",
          "Chemistry",
          "Electronic Learning",
          "Artificial Intelligence",
          "Workshops",
          "Programming Languages",
          "Programming",
          "Visualization",
          "Classification",
          "Regression (Statistics)"],
        "publicationtype":["Journal Articles",
          "Reports - Descriptive"],
        "publicationdateyear":2021,
        "language":["English"],
        "issn":["ISSN-0021-9584"],
        "publisher":"Division of Chemical Education, Inc. and ACS Publications Division of the American Chemical Society. 1155 Sixteenth Street NW, Washington, DC 20036. Tel: 800-227-5558; Tel: 202-872-4600; e-mail: eic@jce.acs.org; Web site: http://pubs.acs.org/jchemeduc",
        "peerreviewed":"T"},
      {
        "id":"EJ1423678",
        "title":"Effects of Gamified Python Programming on Primary School Students&apos; Computational Thinking Skills: A Differential Analysis of Gender",
        "author":["Lihui Sun",
          "Junjie Liu"],
        "description":"Computational thinking (CT), as a new future-oriented literacy, has gained attention at the basic education level. Graphical programming is the common way to develop CT in primary students, but this drag-and-drop programming may weaken students' understanding of programming's abstract concepts and code logic. Text-based programming approaches can solve the problems faced by graphical programming, but few studies have explored the impact of text-based programming on CT. Therefore, we conducted a quasi-experimental study with 98 6th graders to explore the impact of gamified Python programming on CT. The findings showed that CT skills, as well as abstraction and decomposition, pattern recognition and evaluation in CT sub-skills, were significantly higher with students in the experimental group than in the control group. Furthermore, we found that gamified Python programming enabled boys and girls to reach the same level of CT skills. However, in terms of CT sub-skills, we found that gamified Python programming was more beneficial to the development of pattern recognition and evaluation skills for boys and abstraction and decomposition skills for girls. This demonstrated the effectiveness of gamified Python programming to improve primary students' CT skills while clarifying the impact of gender and enriching research in the field of text-based programming.",
        "subject":["Thinking Skills",
          "Computation",
          "Programming",
          "Gamification",
          "Elementary School Students",
          "Gender Differences",
          "Grade 6",
          "Program Effectiveness",
          "Foreign Countries"],
        "publicationtype":["Journal Articles",
          "Reports - Research"],
        "publicationdateyear":2024,
        "language":["English"],
        "issn":["ISSN-0735-6331"],
        "publisher":"SAGE Publications. 2455 Teller Road, Thousand Oaks, CA 91320. Tel: 800-818-7243; Tel: 805-499-9774; Fax: 800-583-2665; e-mail: journals@sagepub.com; Web site: https://sagepub.com",
        "peerreviewed":"T"},
      {
        "id":"EJ1430410",
        "title":"Development and Implementation of a Health Equity-Focused Python and Machine Learning Module in an Introductory BME Course",
        "author":["Kaitlyn Storm",
          "Jerry Zhang",
          "Eileen Haase"],
        "description":"Our first year biomedical engineering course exposes students to multiple engineering and design techniques within an overarching theme of understanding health inequity. Currently, the semester-long curriculum excludes computational methods such as Python programming and Machine Learning, which are usually not introduced until more advanced BME courses in the student's third and fourth year. This paper details the development and student feedback of a 2-week computational module in a team-based course focused on health inequity. Google Colaboratory was used to host the modules and provide a coding environment for students. The end-of-semester survey indicated that 53% of students (N=127) agreed they gained a basic understanding of Python and were comfortable with the programming language and that 72% of students agreed that the module helped them understand the potential of Machine Learning to aid in analyzing health data and identifying health inequities. Student feedback indicated strong interest in spending additional time on a more in-depth project. Nonetheless, we were able to provide students experience with Python programming and Machine Learning. Further, there was a statistically significant increase (34% to 88%, p-value &lt; 0.001) in students who &quot;agreed&quot; or &quot;strongly agreed&quot; that &quot;I can define and ideate solutions for issues in health inequity.&quot; This module enables first year students to use Python and Machine Learning to analyze health inequities and prepares them to apply computational methods in future courses. We have included links to all of the Python and Machine Learning guides, assignments, coding, and answer keys for educators to implement this module.",
        "subject":["Artificial Intelligence",
          "Programming Languages",
          "Learning Modules",
          "Introductory Courses",
          "Engineering Education",
          "Biomedicine",
          "Access to Health Care",
          "Design",
          "Feedback (Response)",
          "Coding",
          "Student Attitudes",
          "Program Development",
          "Teamwork",
          "Program Implementation"],
        "publicationtype":["Journal Articles",
          "Reports - Research"],
        "publicationdateyear":2022,
        "language":["English"],
        "issn":["ISSN-2730-5937"],
        "publisher":"Springer. Available from: Springer Nature. One New York Plaza, Suite 4600, New York, NY 10004. Tel: 800-777-4643; Tel: 212-460-1500; Fax: 212-460-1700; e-mail: customerservice@springernature.com; Web site: https://link.springer.com/",
        "peerreviewed":"T"},
      {
        "id":"EJ1428026",
        "title":"Elevating Student Engagement and Academic Performance: A Quantitative Analysis of Python Programming Integration in the &quot;Merdeka Belajar&quot; Curriculum",
        "author":["Damar Rais",
          "Zhao Xuezhi"],
        "description":"Python programming is widely employed in educational institutions worldwide. Within the &quot;Merdeka Belajar&quot; curriculum context, this programming is recognized as a suitable vehicle for mathematics instruction, significantly influencing students' motivation and learning outcomes, particularly following periods of educational hiatus. This study examines the effectiveness of Python programming in promoting heightened learning outcomes by examining the intricate relationship between student motivation and learning. The study uses quantitative research methodologies to evaluate student learning facilitated through Python programming, encompassing problem-solving assessments and the administration of motivation questionnaires. By engaging in coding practices, students understand the symbols they manipulate, facilitating their ability to juxtapose data derived from mathematical modeling with the resultant programming output. When disparities arise, students are empowered to reassess their work, fostering a more profound comprehension of the subject matter. These exercises serve to augment students' capacity to retain and process information within memory. Furthermore, students demonstrate a favorable disposition, exhibiting persistence in resolving programming challenges by meticulously analyzing error outputs, particularly those pertaining to TypeErrors. Encouraging students to confront errors through thoroughly examining error output manifestations engenders an efficacious learning paradigm. This research proffers invaluable insights for educational institutions contemplating the integration of Python programming as an instructional adjunct.",
        "subject":["Student Motivation",
          "Learning Motivation",
          "Programming Languages",
          "Student Attitudes",
          "Mathematics Instruction",
          "Mathematical Models",
          "Teaching Methods",
          "Coding",
          "Outcomes of Education",
          "Memory",
          "Error Patterns",
          "Error Correction",
          "Computer Science Education",
          "Foreign Countries",
          "Learning Activities",
          "Telecommunications",
          "Handheld Devices",
          "Grade 10",
          "High School Students"],
        "publicationtype":["Journal Articles",
          "Reports - Research"],
        "publicationdateyear":2024,
        "language":["English"],
        "issn":["ISSN-2087-8885"],
        "publisher":"Indonesian Mathematical Society. Jl. Padang Selasa 524, Palembang, South Sumatra 30139, Indonesia. Tel: +618-127-106777; Fax: +627-113-20310; Web site: http://jme.ejournal.unsri.ac.id/index.php/jme",
        "peerreviewed":"T"}]
  }}
