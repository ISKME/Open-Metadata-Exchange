#!/usr/bin/env -S uv run --script

# Source: https://api.ies.ed.gov/eric?search=python
# Docs: https://eric.ed.gov/?api#/default/get_eric_

# /// script
# requires-python = ">=3.13"
# dependencies = [
#     "pydantic",
# ]
# ///
#
# Generated with command:
# uv tool run --from=datamodel-code-generator datamodel-codegen \
#             --input ERIC_open_records.json --input-file-type json \
#             --output eric_models.py
#
# # generated by datamodel-codegen:
#   filename:  ERIC-open-records.json
#   timestamp: 2025-05-11T10:03:25+00:00

from __future__ import annotations

from pydantic import BaseModel, Field, RootModel


class ModelItem(BaseModel):
    id: str
    pdf_url: str = Field(..., alias="pdf-url")
    title: str
    description: str
    e_fulltextauth: str
    source: str
    publicationdateyear: str
    abstractor: str
    peerreviewed: str
    e_yearadded: str
    iesfunded: str
    e_datemodified: str
    publisher: str
    ieslinkpublication: str
    url: str
    sourceid: str
    ieswwcreviewed: str
    ieslinkwwcreviewguide: str
    ieslinkdatasource: str
    subject: str
    author: str
    authorxlink: str
    educationlevel: str
    publicationtype: str
    iesgrantcontractnum: str
    iesgrantcontractnumxlink: str
    language: str
    institution: str
    identifiersgeo: str
    sponsor: str
    identifierstest: str
    issn: str
    iescited: str
    identifierslaw: str
    audience: str
    isbn: str


class Model(RootModel[list[ModelItem]]):
    pass


if __name__ == "__main__":
    from pathlib import Path

    here = Path(__file__).parent
    # An ERIC_open_records.json file should contain multiple items.
    if not (json_path := here / "ERIC_open_records.json").exists():
        msg = f"See convert_eric_csv_to_json.py to regenerate {json_path.name}."
        raise FileNotFoundError(msg)

    records = Model.model_validate_json(json_path.read_text()).root
    for i, record in enumerate(records, start=1):
        # print(f"{record = }\n")
        print(f"\n{i:>2}. {record.id = }")
        print(f"{record.title = }")
        print(f"{record.author = }")
        print(f"{record.description = }")
        print(f"{record.subject = }")
