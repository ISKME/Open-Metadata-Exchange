#!/usr/bin/env -S uv run --script

# /// script
# requires-python = ">=3.13"
# dependencies = [
#     "pydantic",
# ]
# ///
#
# generated by datamodel-codegen:
#   filename:  openlibrary_work.json
#   timestamp: 2025-03-31T10:27:40+00:00
#
# Generated with command:
# uv tool run --from=datamodel-code-generator datamodel-codegen \
#             --input openlibrary_work.json --input-file-type json \
#             --output openlibrary_work_models.py

from __future__ import annotations

from pydantic import BaseModel


class Author1(BaseModel):
    key: str


class Type(BaseModel):
    key: str


class Author(BaseModel):
    author: Author1
    type: Type


class Link(BaseModel):
    url: str
    title: str
    type: Type


class Created(BaseModel):
    type: str
    value: str


class LastModified(BaseModel):
    type: str
    value: str


class Model(BaseModel):
    title: str
    key: str
    authors: list[Author]
    type: Type
    description: str
    links: list[Link]
    covers: list[int]
    subject_places: list[str]
    first_publish_date: str
    subject_people: list[str]
    subject_times: list[str]
    subjects: list[str]
    latest_revision: int
    revision: int
    created: Created
    last_modified: LastModified


if __name__ == "__main__":
    from pathlib import Path

    # The openlibrary_work.json file should be in the same directory as this script.
    json_path = Path(__file__).parent / "openlibrary_work.json"
    model_instance = Model.model_validate_json(json_path.read_text())
    print(f"{model_instance = }\n")
    print(f"{model_instance.type = }")
    print(f"{model_instance.authors = }")
    print(f"{model_instance.created = }")
    print(f"{model_instance.last_modified = }")
